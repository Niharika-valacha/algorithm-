#include<iostream>
using namespace std;
int binarysreach(int arr[],int n,int key)
{
    int start=0;
    int end =n-1;
    int mid=(start+end)/2;
    // we can use this in case we get a larger value (agr int ka value max 2^32-1 ise badh hua toh
    // int mid= start+(end-start)/2
    while(start<=end)
    {
        if( arr[mid]==key)
        {
            return mid;
        }
        // go to right part
        if(key>=mid)
        {
            start= mid+1;
        }
        //go to left vala part
        else{
            end=mid-1;
        }
        mid=(start+end)/2;

    }
    return -1;

}
int main()
{
    int even[6]={2,4,6,8,12,18};
    int odd[5]={3,8,11,14,16};
   int index =binarysreach(odd,5,11);
   cout<< index<< endl;
   return 0;
}
// time complexity
// best case -O(1)
// worst case-O(logn)
